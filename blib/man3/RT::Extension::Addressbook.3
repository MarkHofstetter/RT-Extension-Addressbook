.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "RT::Extension::Addressbook 3"
.TH RT::Extension::Addressbook 3 "2016-03-01" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
RT\-Extension\-Addressbook \- [One line description of module's purpose here]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
[Why would someone install this extension? What does it do? What problem
does it solve?]
.SH "RT VERSION"
.IX Header "RT VERSION"
Works with \s-1RT\s0 [What versions of \s-1RT\s0 is this known to work with?]
.PP
[Make sure to use requires_rt and rt_too_new in Makefile.PL]
.SH "INSTALLATION"
.IX Header "INSTALLATION"
.ie n .IP """perl Makefile.PL""" 4
.el .IP "\f(CWperl Makefile.PL\fR" 4
.IX Item "perl Makefile.PL"
.PD 0
.ie n .IP """make""" 4
.el .IP "\f(CWmake\fR" 4
.IX Item "make"
.ie n .IP """make install""" 4
.el .IP "\f(CWmake install\fR" 4
.IX Item "make install"
.PD
May need root permissions
.IP "Edit your \fI/opt/rt4/etc/RT_SiteConfig.pm\fR" 4
.IX Item "Edit your /opt/rt4/etc/RT_SiteConfig.pm"
If you are using \s-1RT 4.2\s0 or greater, add this line:
.Sp
.Vb 1
\&    Plugin(\*(AqRT::Extension::Addressbook\*(Aq);
.Ve
.Sp
For \s-1RT 4.0,\s0 add this line:
.Sp
.Vb 1
\&    Set(@Plugins, qw(RT::Extension::Addressbook));
.Ve
.Sp
or add \f(CW\*(C`RT::Extension::Addressbook\*(C'\fR to your existing \f(CW@Plugins\fR line.
.IP "Clear your mason cache" 4
.IX Item "Clear your mason cache"
.Vb 1
\&    rm \-rf /opt/rt4/var/mason_data/obj
.Ve
.IP "Restart your webserver" 4
.IX Item "Restart your webserver"
.SH "AUTHOR"
.IX Header "AUTHOR"
Mark Hofstetter, University of Vienna <mark@hofstetter.at>
.SH "BUGS"
.IX Header "BUGS"
All bugs should be reported via the web at
.PP
.Vb 1
\&    L<https://github.com/MarkHofstetter/RT\-Extension\-Addressbook/issues>.
.Ve
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
This software is Copyright (c) 2015 by Mark Hofstetter
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The GNU General Public License, Version 2, June 1991
.Ve
